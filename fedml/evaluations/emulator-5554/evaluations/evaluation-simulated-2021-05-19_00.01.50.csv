environment, simulationIndex, elapsedTime, epoch, iteration, accuracy, f1, precision, recall, gmeasure, mcc, score, before or after averaging, #peers included in current batch, before or after averaging, #peers included in current batch
"connection ratio 1, but take 10 - bristle - transfer", 0, 6899, 0, 0, 0.34, 0.44224358974358974, 0.3618181818181818, 0.33999999999999997, 0.23864490037505517, NaN, 2.302585220336914, after, 0
java.lang.IllegalArgumentException: Requested element count -6 is less than zero. 	at kotlin.collections.CollectionsKt___CollectionsKt.take(_Collections.kt:858) 	at nl.tudelft.trustchain.fedml.ai.gar.Bristle.integrateParameters(Bristle.kt:90) 	at nl.tudelft.trustchain.fedml.ai.Node.potentiallyIntegrateParameters(Node.kt:255) 	at nl.tudelft.trustchain.fedml.ai.Node.performIteration(Node.kt:153) 	at nl.tudelft.trustchain.fedml.ai.SimulatedRunner.performTest(SimulatedRunner.kt:125) 	at nl.tudelft.trustchain.fedml.ai.SimulatedRunner.access$performTest(SimulatedRunner.kt:20) 	at nl.tudelft.trustchain.fedml.ai.SimulatedRunner$simulate$1.invokeSuspend(SimulatedRunner.kt:58) 	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33) 	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:106) 	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:571) 	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:750) 	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:678) 	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:665) 
