apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'org.jlleitschuh.gradle.ktlint'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

buildscript {
    repositories {
        google()
    }
    dependencies {
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.0.0'
    }
}

ktlint {
    version = "$ktlint_version"
    android = true
    outputToConsole = true
    ignoreFailures = false
}

// Generate a version code from git commit count
static def generateVersionCode() {
    int versionCode = "git rev-list HEAD --count".execute().text.trim().toInteger()
    print("Version code: $versionCode")
    return versionCode
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    applicationVariants.all { variant ->
        variant.getRuntimeConfiguration().exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }

    defaultConfig {
        applicationId "nl.tudelft.trustchain"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode generateVersionCode()
        versionName "0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias "trustchain"
            keyPassword "ageoftrust"
            storeFile file("trustchain-superapp.jks")
            storePassword "ageoftrust"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    // To inline the bytecode built with JVM target 1.8 into
    // bytecode that is being built with JVM target 1.6. (e.g. navArgs)
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
        allWarningsAsErrors = true
    }

    buildFeatures {
        viewBinding = true
    }

    packagingOptions {
        exclude 'META-INF/kotlinx-coroutines-core.kotlin_module'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/native-image/**'
    }

    // TODO: Find a way to move this to fedml
    configurations {
        all*.exclude module: 'protobuf'
    }
}

repositories {
    maven {
        url = 'https://raw.githubusercontent.com/blockchain/api-v1-client-java/mvn-repo/'
    }
}

dependencies {
    implementation project(':common')
    implementation project(':trustchain-voter')
    implementation project(':trustchain-explorer')
    implementation project(':fedml')
    implementation project(':trustchain-trader')
    implementation project(':trustchain-payloadgenerator')
    implementation project(':debug')
    implementation project(':distributedai')
    implementation project(':currencyii')
    implementation project(':freedomOfComputing')
    implementation project(':musicdao')
    implementation project(':peerchat')

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation "androidx.preference:preference:1.1.1"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Firebase
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.1'

    // Material
    implementation 'com.google.android.material:material:1.2.1'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Logging
    implementation 'io.github.microutils:kotlin-logging:1.7.7'
    implementation 'com.github.tony19:logback-android-core:1.1.1-6'
    implementation('com.github.tony19:logback-android-classic:1.1.1-6') {
        // workaround issue #73
        exclude group: 'com.google.android', module: 'android'
    }

    implementation 'org.slf4j:slf4j-api:1.7.30'

    implementation 'log4j:log4j:1.2.17'

    implementation 'com.mattskala:itemadapter:0.3'

    // Testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += [
        "-Xuse-experimental=kotlin.Experimental,kotlin.ExperimentalUnsignedTypes",
        "-Xopt-in=kotlin.RequiresOptIn"
    ]
}

